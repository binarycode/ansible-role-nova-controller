---
- name: Enable only compute and metadata APIs.
  ini_file:
    dest:    /etc/nova/nova.conf
    section: DEFAULT
    option:  enabled_apis
    value:   osapi_compute,metadata

- name: Configure DB access.
  ini_file:
    dest:    /etc/nova/nova.conf
    section: '{{ item.section }}'
    option:  connection
    value:   '{{ item.value }}'
  with_items:
    - section: api_database
      value:   'mysql+pymysql://nova:{{ mysql_password }}@{{ mysql_host }}/nova_api'
    - section: database
      value:   'mysql+pymysql://nova:{{ mysql_password }}@{{ mysql_host }}/nova'

- name: Use RabbitMQ.
  ini_file:
    dest:    /etc/nova/nova.conf
    section: DEFAULT
    option:  rpc_backend
    value:   rabbit

- name: Configure RabbitMQ access.
  ini_file:
    dest:    /etc/nova/nova.conf
    section: oslo_messaging_rabbit
    option:  '{{ item.key }}'
    value:   '{{ item.value }}'
  with_dict:
    rabbit_host:     '{{ rabbitmq_host }}'
    rabbit_userid:   '{{ rabbitmq_user }}'
    rabbit_password: '{{ rabbitmq_password }}'

- name: Use Keystone.
  ini_file:
    dest:    /etc/nova/nova.conf
    section: DEFAULT
    option:  auth_strategy
    value:   keystone

- name: Configure Keystone access.
  ini_file:
    dest:    /etc/nova/nova.conf
    section: keystone_authtoken
    option:  '{{ item.key }}'
    value:   '{{ item.value }}'
  with_dict:
    auth_uri:            'http://{{ keystone_host }}:5000'
    auth_url:            'http://{{ keystone_host }}:35357'
    memcached_servers:   '{{ keystone_host }}:11211'
    auth_type:           password
    project_domain_name: default
    user_domain_name:    default
    project_name:        service
    username:            nova
    password:            '{{ keystone_password }}'

- name: Configure management interface IP.
  ini_file:
    dest:    /etc/nova/nova.conf
    section: DEFAULT
    option:  my_ip
    value:   '{{ ip_address }}'

- name: Configure networking.
  ini_file:
    dest:    /etc/nova/nova.conf
    section: DEFAULT
    option:  '{{ item.key }}'
    value:   '{{ item.value }}'
  with_dict:
    use_neutron:     true
    firewall_driver: nova.virt.firewall.NoopFirewallDriver

- name: Configure Neutron access.
  ini_file:
    dest:    /etc/nova/nova.conf
    section: neutron
    option:  '{{ item.key }}'
    value:   '{{ item.value }}'
  with_dict:
    url:                          'http://{{ neutron_host }}:9696'
    auth_url:                     'http://{{ neutron_host }}:35357'
    auth_type:                    password
    project_domain_name:          default
    user_domain_name:             default
    region_name:                  '{{ region }}'
    project_name:                 service
    username:                     neutron
    password:                     '{{ neutron_password }}'
    service_metadata_proxy:       true
    metadata_proxy_shared_secret: '{{ metadata_secret }}'

- name: Configure VNC proxy.
  ini_file:
    dest:    /etc/nova/nova.conf
    section: vnc
    option:  '{{ item }}'
    value:   '{{ ip_address }}'
  with_items:
    - vncserver_listen
    - vncserver_proxyclient_address

- name: Configure Glance access.
  ini_file:
    dest:    /etc/nova/nova.conf
    section: glance
    option:  api_servers
    value:   'http://{{ glance_host }}:9292'

- name: Configure lock path.
  ini_file:
    dest:    /etc/nova/nova.conf
    section: oslo_concurrency
    option:  lock_path
    value:   /var/lib/nova/tmp
